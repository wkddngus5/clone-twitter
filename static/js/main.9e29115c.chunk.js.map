{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","dbService","storageService","userObject","refreshUser","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","useEffect","a","collection","where","uid","orderBy","get","getMyTweets","onSubmit","event","preventDefault","console","log","updateProfile","className","autoFocus","type","placeholder","value","onChange","target","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Tweet","tweetObject","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","key","src","faTrash","faPencilAlt","TweetFactory","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","add","maxLength","htmlFor","faPlus","accept","opacity","theFile","files","reader","FileReader","onload","finishEvent","result","currentTarget","readAsDataURL","alt","backgroundImage","faTimes","Home","tweets","setTweets","onSnapshot","snapshot","tweetArray","docs","map","document","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","from","App","init","setInit","setUserObject","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9e29115c.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n  };\n \n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  \n  export const firebaseInstance = firebase;\n\n  export const authService = firebase.auth();\n  export const dbService = firebase.firestore();\n  export const storageService = firebase.storage();","import { authService, dbService } from 'fbase';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport default ({userObject, refreshUser}) => {\n\tconst history = useHistory();\n\tconst [newDisplayName, setNewDisplayName] = useState(userObject.displayName);\n\tconst onLogOutClick = () => {\n\t\tauthService.signOut();\n\t\thistory.push('/');\n\t\trefreshUser();\n\t}\n\t\n\tuseEffect(() => {\n\t\tconst getMyTweets = async () => {\n\t\t\tawait dbService\n\t\t\t\t.collection('tweets')\n\t\t\t\t.where('creatorId', '==', userObject.uid)\n\t\t\t\t.orderBy('createdAt')\n\t\t\t\t.get();\n\t\t}\n\t\tgetMyTweets();\n\t}, [userObject.uid]);\n\n\tconst onChange = (event) => {\n\t\tsetNewDisplayName(event.target.value);\n\t}\n\tconst onSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tconsole.log(userObject.displayName !== newDisplayName)\n\t\tif (userObject.displayName !== newDisplayName) {\n\t\t\tawait userObject.updateProfile({\n\t\t\t\tdisplayName: newDisplayName,\n\t\t\t});\n\t\t\trefreshUser();\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<form\n\t\t\t\tclassName=\"profileForm\"\n\t\t\t\tonSubmit={onSubmit}>\n\t\t\t\t<input\n\t\t\t\t\tautoFocus\n\t\t\t\t\tclassName=\"formInput\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Display name\"\n\t\t\t\t\tvalue={newDisplayName}\n\t\t\t\t\tonChange={onChange} />\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"formBtn\"\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tvalue=\"Update Profile\"\n\t\t\t\t\tstyle={{ marginTop: 10 }}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t\t<span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n\t\t\t\tLog Out\n\t\t\t</span>\n\t\t</div>\n\t)\n};","import React, {useState} from 'react';\nimport { authService } from 'fbase';\n\nconst AuthForm = () => {\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [newAccount, setNewAccount] = useState(true);\n\tconst [error, setError] = useState('');\n\n\tconst onChange = (event) => {\n\t\tconst {target: {name, value}} = event;\n\t\tif (name === 'email') {\n\t\t\tsetEmail(value);\n\t\t} else if(name === 'password') {\n\t\t\tsetPassword(value);\n\t\t}\n\t}\n\n\tconst onSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\ttry {\n\t\t\tlet data;\n\t\t\tif (newAccount) {\n\t\t\t\tdata = await authService.createUserWithEmailAndPassword(\n\t\t\t\t\temail, password\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tdata = await authService.signInWithEmailAndPassword(\n\t\t\t\t\temail, password\n\t\t\t\t)\n\t\t\t}\n\t\t\tconsole.log(data);\n\t\t} catch (error) {\n\t\t\tsetError(error.message);\n\t\t}\n\t}\n\n\tconst toggleAccount = () => setNewAccount((prev) => !prev);\n\n\treturn (\n\t\t<>\n\t\t\t<form\n\t\t\t\tclassName=\"container\"\n\t\t\t\tonSubmit={onSubmit}>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"authInput\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\trequired\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"authInput\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\trequired\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"authInput authSubmit\"\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tvalue={newAccount ? 'Create Account' : 'Log In'} />\n\t\t\t\t{error && <span className=\"authError\">{error}</span>}\n\t\t\t</form>\n\t\t\t<span\n\t\t\t\tclassName=\"authSwitch\"\n\t\t\t\tonClick={toggleAccount}>\n\t\t\t\t{newAccount ? 'Log in' : 'Create Account'}\n\t\t\t</span>\n\t\t</>\n\t);\n}\n\nexport default AuthForm;\n","import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from 'fbase';\nimport AuthForm from 'components/AuthForm';\n\n\nconst Auth = () => {\n\tconst onSocialClick = async (event) => {\n\t\tconst {target: {name}} = event;\n\t\tlet provider;\n\t\tif (name === 'google') {\n\t\t\tprovider = new firebaseInstance.auth.GoogleAuthProvider();\n\t\t} else if (name === 'github') {\n\t\t\tprovider = new firebaseInstance.auth.GithubAuthProvider();\n\t\t}\n\t\tconst data = await authService.signInWithPopup(provider);\n\t\tconsole.log(data);\n\t} \n\treturn (\n\t\t<div>\n\t\t\t<div className=\"authContainer\">\n\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\ticon={faTwitter}\n\t\t\t\t\tcolor={\"#04AAFF\"}\n\t\t\t\t\tsize=\"3x\"\n\t\t\t\t\tstyle={{ marginBottom: 30 }}\n\t\t\t\t/>\n\t\t\t\t<AuthForm />\n\t\t\t\t<div className=\"authBtns\">\n\t\t\t\t\t<button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n\t\t\t\t\t\tContinue with Google <FontAwesomeIcon icon={faGoogle} />\n\t\t\t\t\t</button>\n\t\t\t\t\t<button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n\t\t\t\t\t\tContinue with Github <FontAwesomeIcon icon={faGithub} />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Auth;","import { dbService, storageService } from 'fbase';\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Tweet = ({tweetObject, isOwner}) => {\n\tconst [editing, setEditing] = useState(false);\n\tconst [newTweet, setNewTweet] = useState(tweetObject.text);\n\n\tconst onDeleteClick = async () => {\n\t\tconst ok = window.confirm('Are you sure you want to delete this tweet?');\n\t\tif(ok) {\n\t\t\tawait dbService.doc(`tweets/${tweetObject.id}`).delete();\n\t\t\tawait storageService.refFromURL(tweetObject.attachmentUrl).delete();\n\t\t}\n\t}\n\n\tconst toggleEditing = () => setEditing((prev) => !prev);\n\n\tconst onSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tawait dbService.doc(`tweets/${tweetObject.id}`).update({\n\t\t\ttext: newTweet,\n\t\t});\n\t\tsetEditing(false);\n\t}\n\n\tconst onChange = (event) => {\n\t\tconst {target: {value}} = event;\n\t\tsetNewTweet(value);\n\t}\n\n\treturn (\n\t\t<div\n\t\tclassName=\"tweet\"\n\t\t\tkey={tweetObject.id}>\n\t\t\t{\n\t\t\t\tediting ?  (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tclassName=\"container tweetEdit\"\n\t\t\t\t\t\t\tonSubmit={onSubmit}>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tvalue={newTweet }\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Edit you tweet\"\n\t\t\t\t\t\t\t\tonChange={onChange} />\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"formBtn\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tvalue=\"Update Tweet\" />\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"formBtn cancelBtn\"\n\t\t\t\t\t\t\tonClick={toggleEditing}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<h4>{tweetObject.text}</h4>\n\t\t\t\t\t\t{tweetObject.attachmentUrl && <img src={tweetObject.attachmentUrl} />}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisOwner && (\n\t\t\t\t\t\t\t\t<div className=\"tweet__actions\">\n\t\t\t\t\t\t\t\t\t<span onClick={onDeleteClick}>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTrash} />\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<span onClick={toggleEditing}>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPencilAlt} />\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default Tweet;","import React, {useState} from 'react';\nimport { dbService, storageService } from 'fbase';\nimport {v4 as uuidv4} from 'uuid';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TweetFactory = ({ userObject }) => {\n\tconst [tweet, setTweet] = useState('');\n\tconst [attachment, setAttachment] = useState('');\n\n\tconst onSubmit = async (event) => {\n\t\tif (tweet === '') {\n\t\t\treturn;\n\t\t}\n\t\tevent.preventDefault();\n\t\tlet attachmentUrl = '';\n\t\tif(attachment !== '') {\n\t\t\tconst attachmentRef = storageService.ref().child(`${userObject.uid}/${uuidv4()}`);\n\t\t\tconst response = await attachmentRef.putString(attachment, 'data_url');\n\t\t\tattachmentUrl = await response.ref.getDownloadURL();\n\t\t}\n\t\tconst tweetObject = {\n\t\t\ttext: tweet,\n\t\t\tcreatedAt: Date.now(),\n\t\t\tcreatorId: userObject.uid,\n\t\t\tattachmentUrl,\n\t\t}\n\t\tawait dbService.collection('tweets').add(tweetObject);\n\t\tsetTweet('');\n\t}\n\tconst onChange = (event) => {\n\t\tconst {target:{value}} = event;\n\t\tsetTweet(value);\n\t}\n\tconst onFileChange = (event) => {\n\t\tconst {target: {files}} = event;\n\t\tconst theFile = files[0];\n\t\tconst reader = new FileReader();\n\t\treader.onload = (finishEvent) => {\n\t\t\tconst {currentTarget: {result}} = finishEvent;\n\t\t\tsetAttachment(result);\n\t\t}\n\t\treader.readAsDataURL(theFile);\n\t}\n\n\tconst onClearAttachment = () => setAttachment('');\n\n\treturn (\n\t\t<form onSubmit={onSubmit} className=\"factoryForm\">\n\t\t\t<div className=\"factoryInput__container\">\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"factoryInput__input\"\n\t\t\t\t\tvalue={tweet}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"What's on your mind?\"\n\t\t\t\t\tmaxLength={120}\n\t\t\t\t/>\n\t\t\t\t<input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n\t\t\t</div>\n\t\t\t<label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n\t\t\t\t<span>Add photos</span>\n\t\t\t\t<FontAwesomeIcon icon={faPlus} />\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\tid=\"attach-file\"\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\"image/*\"\n\t\t\t\tstyle={{ opacity: 0 }}\n\t\t\t\tonChange={onFileChange}\n\t\t\t/>\n\t\t\t{attachment && (\n\t\t\t\t<div className=\"factoryForm__attachment\">\n\t\t\t\t\t<img\n\t\t\t\t\t\talt=\"attachment\"\n\t\t\t\t\t\tsrc={attachment}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundImage: attachment,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n\t\t\t\t\t\t<span>Remove</span>\n\t\t\t\t\t\t<FontAwesomeIcon icon={faTimes} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t)}\n\t\t</form>\n\t);\n}\n\nexport default TweetFactory;","import React, { useEffect, useState } from 'react';\nimport Tweet from 'components/Tweet';\nimport { dbService } from 'fbase';\nimport TweetFactory from 'components/TweetFactory';\n\nconst Home = ({userObject}) => {\n\tconst [tweets, setTweets] = useState([]);\n\n\tuseEffect( () => {\n\t\tdbService.collection('tweets').onSnapshot(snapshot => {\n\t\t\tconst tweetArray = snapshot.docs.map(document => ({id: document.id, ...document.data() }));\n\t\t\tsetTweets(tweetArray);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<TweetFactory\n\t\t\t\tuserObject={userObject} />\n\t\t\t<div style={{ marginTop: 30 }}>\n\t\t\t\t{tweets.map(tweet =>\n\t\t\t\t\t<Tweet\n\t\t\t\t\t\tkey={tweet.id}\n\t\t\t\t\t\ttweetObject={tweet}\n\t\t\t\t\t\tisOwner={tweet.creatorId === userObject.uid}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\nexport default Home;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTwitter} from \"@fortawesome/free-brands-svg-icons\";\nimport {faUser} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({userObject}) => (\n\t<nav>\n\t\t<ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n\t\t\t<li>\n\t\t\t\t<Link to=\"/\" style={{ marginRight: 10 }}>\n\t\t\t\t\t<FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n\t\t\t\t</Link>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<Link\n\t\t\t\t\tto=\"/profile\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmarginLeft: 10,\n\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\tfontSize: 12,\n\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t<FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n\t\t\t\t\t<span style={{ marginTop: 10 }}>\n\t\t\t\t\t\t{userObject.displayName\n\t\t\t\t\t\t? `${userObject.displayName}의 Profile`\n\t\t\t\t\t\t: \"Profile\"}\n\t\t\t\t\t</span>\n\t\t\t\t</Link>\n\t\t\t</li>\n\t\t</ul>\n\t</nav>\n);\nexport default Navigation;","import React from 'react';\nimport {HashRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\nimport Profile from 'routes/Profile';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Navigation from './Navigation';\n\nconst AppRouter = ({isLoggedIn, userObject, refreshUser}) => {\n\treturn (\n\t\t<Router>\n\t\t\t{isLoggedIn && <Navigation userObject={userObject} /> }\n\t\t\t<Switch>\n\t\t\t\t<>\n\t\t\t\t\t{isLoggedIn ? (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmaxWidth: 890,\n\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\tmargin: \"0 auto\",\n\t\t\t\t\t\t\t\tmarginTop: 80,\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t\t<Home userObject={userObject} />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route exact path=\"/profile\">\n\t\t\t\t\t\t\t\t<Profile\n\t\t\t\t\t\t\t\t\tuserObject={userObject}\n\t\t\t\t\t\t\t\t\trefreshUser={refreshUser} />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Redirect from=\"*\" to=\"/\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t\t<Auth />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Redirect from=\"*\" to=\"/\" />\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t</Switch>\n\t\t</Router>\n\t)\n}\n\nexport default AppRouter;\n","import React, {useEffect, useState} from 'react';\nimport AppRouter from 'components/Router';\nimport {authService} from 'fbase';\n\nfunction App() {\n\tconst [init, setInit] = useState(false);\n\tconst [userObject, setUserObject] = useState(null);\n\n\tuseEffect(() => {\n\t\tauthService.onAuthStateChanged((user) => {\n\t\t\tif (user) {\n\t\t\t\tsetUserObject({\n\t\t\t\t\tdisplayName: user.displayName,\n\t\t\t\t\tuid: user.uid,\n\t\t\t\t\tupdateProfile: (args) => user.updateProfile(args),\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetUserObject(null);\n\t\t\t}\n\t\t\tsetInit(true);\n\t\t});\n\t}, []);\n\n\tconst refreshUser = () => {\n\t\tconst user = authService.currentUser;\n\t\tsetUserObject({\n\t\t\tdisplayName: user.displayName,\n\t\t\tuid: user.uid,\n\t\t\tupdateProfile: (args) => user.updateProfile(args),\n\t\t});\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{init ? <AppRouter\n\t\t\t\tisLoggedIn={!!userObject}\n\t\t\t\tuserObject={userObject}\n\t\t\t\trefreshUser={refreshUser} /> : 'Initializing...'  }\n\t\t\t{/* <footer>&copy; Twitter {new Date().getFullYear()}</footer> */}\n\t\t</>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}